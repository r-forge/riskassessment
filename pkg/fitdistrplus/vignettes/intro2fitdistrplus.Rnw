%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Copyright (c) 2012 Marie Laure Delignette-Muller, Christophe Dutang                        
%                                                                                                                                                       
%    This program is free software; you can redistribute it and/or modify                               
%    it under the terms of the GNU General Public License as published by                        
%    the Free Software Foundation; either version 2 of the License, or                                 
%    (at your option) any later version.                                                                                        
%                                                                                                                                                      
%    This program is distributed in the hope that it will be useful,                                          
%    but WITHOUT ANY WARRANTY; without even the implied warranty of                        
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   
%    GNU General Public License for more details.                                                                    
%                                                                                                                                                         
%    You should have received a copy of the GNU General Public License                           
%    along with this program; if not, write to the                                                                            
%    Free Software Foundation, Inc.,                                                                                             
%    59 Temple Place, Suite 330, Boston, MA 02111-1307, USA                                            
%                                                                                                                                                         
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Fit parametric distributions on non-censored or censored data with fitdistrplus
%%%
%%%         Sweave vignette file
%%%

\documentclass[a4paper]{article}
% sweave commands for vignette
%\VignetteIndexEntry{Fit parametric distributions on non-censored or censored data}
%\VignettePackage{fitdistrplus}
%\VignetteKeyword{distribution}


%American Mathematical Society (AMS) math symbols
\usepackage{amsfonts,amssymb,amsmath}

% accents 8 bits dans le fichier
%\usepackage[applemac]{inputenc} %MAC encoding
\usepackage[utf8]{inputenc} %UNIX encoding
%\usepackage[ansinew]{inputenc} %WINDOWS encoding

\usepackage{color,graphics, wrapfig, subfig}
\usepackage[a4paper, textwidth=18cm, textheight=27cm]{geometry}
\usepackage{url}

%reference hypertext
\usepackage[pagebackref=true, hyperfootnotes=false]{hyperref}

%todo notes
\usepackage{todonotes}


% les macros generales

%layout
\newcommand{\HRuleTop}{\noindent\rule{\linewidth}{.5pt}}
\newcommand{\HRuleBottom}{\rule{\linewidth}{.5pt}}
\newcommand{\ligne}{\rule[2mm]{.3\textwidth}{0,5mm}\\}
\newcommand{\myskip}{\vspace{\parskip}}
\newcommand{\mytodo}[1]{\todo[color=green]{TODO}#1}
\newcommand{\blank}{ \clearpage{\pagestyle{empty}\cleardoublepage} }


%text style (some are common with the JSS latex class)
\newcommand{\pkg}{\textbf}
\newcommand{\sigle}{\textsc}
\newcommand{\code}{\texttt}
\newcommand{\proglang}{\textsf}
\newcommand{\txtm}[1]{\textrm{~~#1~~}}
\newcommand{\expo}{\textsuperscript}



\title{Fitting parametric univariate distributions  to non-censored or
censored data using the \proglang{R} package \pkg{fitdistrplus}}
\author{Marie Laure Delignette-Muller and Christophe Dutang}

\begin{document}
\SweaveOpts{concordance=TRUE, prefix.string=figs/intro}
\setkeys{Gin}{width=0.8\textwidth} %equivalent to \includegraphics[width=0.8\textwidth]{.}

\maketitle


\HRuleTop\\
TODO abstract\\
\HRuleBottom


% A enlever dans version JSS !
\tableofcontents


\newpage


\section{Introduction}
\label{Introduction}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



Fitting distributions to data is a very common task in statistics and consists in choosing
a probability distribution that gives a good representation of a statistical
variable as well as finding parameter estimates of that distribution. 
It requires judgment and expertise and generally needs an iterative process of
distribution choice, parameter estimation, and quality of fit evaluation.
In this paper, we present our package \pkg{fitdistrplus} for the statistical software \proglang{R} \cite{R12}.

Function \code{fitdistr} in the \proglang{R} package \pkg{MASS} \cite{MASS} 
is a well known general-purpose maximum-likelihood
fitting routine for the parameter estimation step in \proglang{R}. Other steps of
the process may be developed using \proglang{R} \cite{Ricci05}. Our first objective by developping
package \pkg{fitdistrplus} \cite{fitdistrplus} 
was to provide \proglang{R} users a set of functions dedicated to help the overall
process of fitting a univariate parametric distribution to data.

Function \code{fitdistr} estimates distribution parameters by maximizing the log-likelihood
using function \code{optim}.
In some cases, other estimation methods could be prefered, 
such as maximum goodness-of-fit estimation also commonly called minimum distance estimation, and
proposed in package \pkg{actuar} with three different goodness-of-fit distances, see \cite{actuarJSS}. 
While developping package \pkg{fitdistrplus}, our second objective  was to extend function \code{fitdistr} 
by providing various
estimation methods to fit distributions in addition to maximum likelihood. Functions
were developped to enable matching moment estimation, matching quantile estimation, and 
maximum goodness-of-fit estimation (or minimum distance estimation) using eight different distances.
Moreover, package \pkg{fitdistrplus} offers the possibility to specify a user-supplied function
for optimization, 
useful in cases where optimization techniques not included in function \code{optim} may be more adequate.

In applied statistics, it is not uncommon to have to fit distributions to censored data. 
Function \code{fitdistr} 
does not enable maximum likelihood estimation from this type data. Some packages 
deal with censored data, especially survival data \cite{survival},
but those packages generally focused on specific models, enabling the fit of only one distribution or a 
restricted family of distributions. Our third objective was thus to provide \proglang{R} users a function 
to estimate univariate distribution parameters from censored data, whatever the type of censoring. 
% POUR JSS AJOUTER DES REF A DES PAPIERS QUI DISENT QU'ON MANQUE D OUTILS POUR PRENDRE EN COMPTE CES DONNES !!!!!!!!!!!!!
% ou qui tout simplement ne les prennent pas en compte comme il faut
% ex.: Hickey 2012, Fox 2010, Buschaert ????, ...
% EXPLORER LES REF SUIVANTES en microbio et en chercher en ecotox et ailleurs
% -Hirano et al. (1994). Estimation of and temporal changes in means and variances of populations of Pseudomonas syringae on snap bean leaflets. Phytopathology  89: 934-940.
% -FDA/USDA (2003)  "Quantitative Assessment of Relative Risk to Public Health from Foodborne Listeria monocytogenes Among Selected Categories of Ready-to-Eat Foods" , voir "http://www.foodsafety.gov/~dms/lmr2-3.html#Modeling-Retail" 
% -Jordan (2005). Simulating the sensitivity of pooled-sample herd tests for fecal Salmonella in cattle. Preventive veterinary medicine. 70:59-73.
% -Pouillot et al. (2007) Quantitative Risk Assessment of Listeria monocytogenes in French cold-smoked salmon: I. Quantitative exposure assessment. Risk Analysis 27, 683-700. + Beaufort et al. (2007) Prevalence and growth of Listeria monocytogenes in naturally contaminated cold-smoked salmon. Lett Appl Microbiol 44, 406-411. 


Few packages on \sigle{CRAN} provide estimation procedures for a general distribution and a general type of data. 
The \pkg{distrMod} package of \cite{distrModJSS} provides an object-oriented (S4) 
implementation of probability models 
and includes distribution fitting procedures for a given minimization criterion.
In \pkg{fitdistrplus}, we use the standard S3 class system, we believe, simpler than the full object-oriented S4 model for most \proglang{R} users.
Furthermore, the \pkg{distrMod} package does not allow to fit censored data.
The \code{mle} function of \pkg{stats4} package provides a procedure for maximum likelihood estimation whose output has class \code{"mle"}.
Many generic methods are implemented for this type of object, e.g. \code{confint}, \code{logLik},...
When designing the \pkg{fitdistrplus} package, we also take this into account.
Finally, various packages provide functions to estimate the mode, the moments or the L-moments of a distribution, see the reference manuals of packages \pkg{modeest}, \pkg{lmomco} and \pkg{Lmoments}.

% A CHANGER POUR CONFORMITE AVEC NO VERSION CRAN !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
This manuscript reviews the various features of version 1.0-0 of \pkg{fitdistrplus}. The package
is available from the Comprehensive \proglang{R} Archive Network at \url{http://cran.r-project.org/package=fitdistrplus}.
The development version of the package is located at \proglang{R}-forge as one the packages of the 
project ``Risk Assessment with R''
(\url{http://r-forge.r-project.org/projects/riskassessment/})
The following command will load the package.
%%% R code set default options for all R schunks
<<par4vignette, echo=FALSE, results=hide>>=
options(digits=4, SweaveHooks=list(fig=function() par(mar=c(5.1, 4.1, 1.1, 2.1))) )
@
%%% R code
<<pkgload1, results=hide>>=
library(fitdistrplus)
@

% A continuer

% POUR JSS AJOUTER UN PLAN DU PAPIER !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


%\subsection{Running examples TO BE REMOVED}
%\label{Examples}
%%%%%%%%%%%
%For illustrating the use of various functions of package \pkg{fitdistrplus}, we will use
%four examples published in various biological areas, 
%corresponding to data sets included in the package.


%The ``endosulfan'' data set contains
%acute toxicity values for the organochlorine pesticide endosulfan
%(geometric mean of LC50 ou EC50 values in $\mu g.L^{-1}$),
%tested on Australian and non-Australian laboratory-species 
%(arthropods, fish or nonarthropod invertebrates) (\cite{Hose04}).
%%% R code
%<<datendosulfan, echo=TRUE>>=
%data(endosulfan)
%str(endosulfan)
%@



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Fitting distributions to continuous non-censored data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
For illustrating the use of various functions of package \pkg{fitdistrplus} 
to help the fit of a distribution to continuous data, we  use
a data set named ``ground beef'' which is included in our package.
This data set contains pointwise values of
serving sizes in grams, collected in a French survey, for ground beef patties consumed by 
children under 5 years old. This data set is used by  \cite{Delignette08}, a quantitative risk assessment 
published in the international journal of food microbiology journal.
%%% R code
<<datgroundbeef, echo=TRUE>>=
data(groundbeef)
str(groundbeef)
@

\subsection{Choice of candidate distributions}
\label{Choice}
Before fitting one or more distributions to a data set, it is generally
necessary to choose good candidates among a predefined family of distributions.
To help the user in this preliminary task, we developed functions to plot and
characterise the empirical distribution.

\subsubsection{Graphical display of the observed distribution}
\label{Graphical}
%%%%%%%%%%

First of all, the empirical distribution and density functions may be plotted using the 
classical \proglang{R} functions \code{ecdf} and \code{hist}
or using Function \code{plotdist}.
This function provides such plots : the left-hand plot is the histogram (on a density level) 
and the right-hand plot is the empirical cumulative distribution function (cdf).
Below, we give an example for a continuous variables giving in Figure~\ref{plotdistcont}.
%%% R code
<<figgroundbeef.echo, echo=TRUE, fig=FALSE, eval=FALSE>>=
plotdist(groundbeef$serving)
@
\begin{figure}[htb!]
  \centering
  %%% R code
<<figgroundbeefplot, echo=FALSE, fig=TRUE, width=10, height=5, eps=FALSE>>=
plotdist(groundbeef$serving)
@
  \caption{Density and cdf plots of an empirical distribution for a continuous variable 
  (serving size from the ``ground beef'' data set)}
  \label{plotdistcont}
\end{figure}

%\clearpage




\subsubsection{Empirical basis for selecting candidate distributions}
\label{Empirical}
%%%%%%%%%% 
In addition to empirical plots, descriptives statistics may help to choose good candidates to describe a distribution
among a family of parametric distributions. Especially the skewness and kurtosis, linked to the third and fourth moments, 
are useful for this purpose. The concept of skewness relates to deviations from symmetry of the distribution is defined as
The normal distribution has a skewness of zero. A positive (resp. negative) skewness indicates 
that the right (resp. left) tail of the distribution is more extended than the left (resp. right) one.
The concept of kurtosis relates to the tail weight. The normal distribution has a kurtosis of 3.
Distributions with a higher kurtosis are said to be leptokurtic, with heavier tails, such as the 
logistic distribution, while distributions with a smaller kurtosis are said platykurtic, with lighter 
tails, such as the uniform distribution, see 

Function \code{descdist} provides calculations of classical descriptive statistics
(minimum, maximum, median, mean, standard deviation) and skewness and Pearsons's kurtosis. By default 
unbiased estimations of the three last statistics are provided but the argument \code{method}
may be used to obtain  them without correction for bias. 
Skewness and kurtosis with their corresponding unbiased estimator of a sample $(X_i)_i \stackrel{\text{i.i.d.}}{\sim} X$ 
are given by
  \begin{equation}
    \label{skewness}
    sk(X) = \frac{E[(X-E(X))^3]}{Var(X)^{\frac{3}{2}}}~,~
    \widehat{sk}=\frac{\sqrt{n(n-1)}}{n-2}\times\frac{m_{3}}{m_{2}^{\frac{3}{2}}},
  \end{equation}

  \begin{equation}
    \label{kurtosis}
    kr(X) = \frac{E[(X-E(X))^4]}{Var(X)^{2}}~,~
    \widehat{kr}=\frac{n-1}{(n-2)(n-3)}((n+1) \times \frac{m_{4}}{m_{2}^{2}}-3(n-1)) + 3,
  \end{equation}
where $m_{2}$, $m_{3}$, $m_{4}$ denote empirical moments defined by
$m_{r}=\frac{1}{n}\sum_{i=1}^n(x_{i}-\overline{x})^{r}$, with
$x_{i}$ the $n$ observations of variable $x$ and $\overline{x}$ their mean value. 

A skewness-kurtosis plot such as the one proposed by \cite{Cullen99} is  provided by 
the function \code{descdist} for the empirical distribution (see Figure~\ref{Cullenplotcont} for the \code{groundbeef}
data set). 
On this plot, values for common distributions are displayed as tools 
to help the choice of distributions to fit to data. For some distributions (normal, uniform,
logistic, exponential for example), there is only one possible value for the skewness and the kurtosis
 and the distribution is thus represented by a point on the plot. For other distributions, 
areas of possible values are represented, consisting in lines (as for gamma and lognormal distributions), 
or larger areas (as for beta distribution).
    
Skewness and kurtosis are known not to be robust. In order to take into account the uncertainty 
of the estimated values of kurtosis and skewness from data, a bootstrap procedure can be performed
by fixing the argument \code{boot} to an integer above 10.
\code{boot} bootstrap samples of the same size of the original data set
are then constructed by random sampling with replacement from that original data set.
Values of skewness and kurtosis 
are computed on that bootstrap samples and reported on the 
skewness-kurtosis plot. Below is a call to function \code{descdist} to describe the distribution 
of the serving size from the ``ground beef'' data set and to draw the corresponding skewness-kurtosis
plot (Figure~\ref{Cullenplotcont}). Looking at the results on this example
with a positive skewness and a kurtosis not far from 3,
the fit of three common right-skewed distributions could be considered, Weibull, gamma and 
lognormal distributions.
%%% R code
<<descgroundbeef.echo, echo=TRUE, fig=FALSE, eval=FALSE>>=
descdist(groundbeef$serving, boot=1000)
@


\setkeys{Gin}{width=0.5\textwidth}

\begin{figure}[htb]
  \centering
 %%% R code
<<descgroundbeefplot, echo=FALSE, fig=TRUE, width=6, height=6, eps=FALSE>>=
descdist(groundbeef$serving, boot=1000)
@
  \caption{Skewness-kurtosis plot for a continuous variable 
  (serving size from the \code{groundbeef} data set)}
  \label{Cullenplotcont}
\end{figure}


\setkeys{Gin}{width=0.8\textwidth} %default
%\clearpage


\subsection{Fit of a distribution by maximum likelihood estimation}
\label{FIT}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Parameter estimation}
\label{Estim}
%%%%%%%%%%
Once selected, one or more parametric distributions $f(.\vert \theta)$ may be fitted to the data set, one at a time, using
Function \code{fitdist}. 
Under the i.i.d. sample assumption, distribution parameters $\theta$ are by default estimated by maximizing the
likelihood defined as:
  \begin{equation}
    \label{likelihood}
    L(\theta)=\prod_{i=1}^n f(x_{i}\vert \theta)
  \end{equation}
with $x_{i}$ the $n$ observations of variable $x$ and $f$ the density function of the 
parametric distribution.
The other proposed estimation methods are described in Section~\ref{Alternatives}. 

Function \code{fitdist} returns the results of the fit of any parametric distribution 
to a data set as an S3 class object that may be easily printed, 
summarized or plotted (see Figure~\ref{plotcontfit} in Section~\ref{GOF:plots}). 
The parametric distribution must be a classically defined \proglang{R} distributions,
with at least d, p and q functions respectively for the density, cumulative distribution and quantile functions
(for example \code{dnorm}, \code{pnorm} and \code{qnorm} for the normal distribution).
The name of the fitted distribution is specified in the first argument by its classical 
abbreviation used as the second part of d, p and q functions (for example \code{"norm"}
for the normal distribution). Numerical results returned by Function \code{fitdist} are 
parameter estimates with estimated standard errors computed from the estimate
of the Hessian matrix at the maximum likelihood solution, correlation matrix
between parameter estimates, the loglikelihood, the Akaike and the Schwarz information criteria 
(so called AIC and BIC).
Below is a call to function \code{fitdist} to fit a Weibull distribution 
to the serving size in the ``ground beef'' data set.
%%% R code
<<fitgroundbeef.weibull, echo = TRUE, fig = FALSE>>=
fw <- fitdist(groundbeef$serving, "weibull")
summary(fw)
@

For some distributions (see the help of \code{fitdist} for details), it is necessary to specify initial 
values for the distribution parameters in the argument \code{start} when using the maximum likelihood method.
\code{start} must be a named list
of parameters initial values. The names of
the parameters in \code{start} must correspond exactly to their definition in \proglang{R} or in a user-supplied \proglang{R} code.
Function \code{plotdist} (see Section~\ref{GOF:plots}), 
which can plot any parametric distribution with specified parameter values
in argument \code{para} may help to find correct initial values for 
the distribution parameters in non trivial cases, by iterative calls if necessary (see the reference 
manual~\cite{fitdistrplus} for examples).
 

For a pedagogic purpose, here is a fit of a user-supplied distribution. 
We fit the Gumbel distribution 
(also named the extreme value distribution) on the \code{groundbeef} data set.
<<fitdanish1, echo=TRUE, fig=FALSE>>=
dgumbel<-function(x,a,b) 1/b*exp((a-x)/b)*exp(-exp((a-x)/b))
pgumbel<-function(q,a,b) exp(-exp((a-q)/b))
qgumbel<-function(p,a,b) a-b*log(-log(p))
summary(fitdist(groundbeef$serving, "gumbel", start=list(a=5, b=10)))
@

%\begin{figure}[htb]
%  \centering
%<<echo=FALSE, results=hide, fig=TRUE>>=
%plotdist(x1,"gumbel",para=list(a=10,b=5))
%@
%  \caption{Preliminar plot of a distribution against data to find initial values for parameters}
%  \label{plotdist}
%\end{figure}


\subsubsection{Goodness-of-fit plots}
\label{GOF:plots}
%%%%%%%%%%
The plot of an object of class \code{"fitdist"} corresponding to the fit of a continuous 
distribution to non-censored data, provides 
four goodness-of-fit plots : a draw of pdf curve and histogram together (density plot), an cdf plot
of both empirical and theoretical distributions, a Q-Q plot
(plot of the quantiles of the theoretical fitted distribution (x-axis) against the empirical quantiles of the data (y-axis))
and a P-P plot (i.e. for each value of the data set, plot of the cumulative density function of the fitted distribution
(x-axis) against the empirical cumulative density function (y-axis)) are also given \cite{Cullen99}.
For all these four plots, the probability plotting position is defined as recommended by Blom \cite{Blom},
by a call to Function \code{ppoints} from the \pkg{stats} package with its default arguments.
The Q-Q plot emphasizes the lack-of-fit at the distribution tails while the P-P plot emphasizes
the lack-of-fit at the distribution center.
As an example, let us look at the plot of the previous fit of a Weibull distribution to the \code{groundbeef} data set
(Figure~\ref{plotcontfit}). The fit is not perfect,
especially in the center of the distribution, but seems correct when looking at the tails.
%%% R code
<<fitgroundbeef.weibull.echo, echo=TRUE, fig=FALSE, eval=FALSE>>=
plot(fw)
@


\setkeys{Gin}{width=0.65\textwidth} %default

\begin{figure}[htb]
  \centering
  %%% R code
<<fitgroundbeefweibullplot, echo=FALSE, fig=TRUE, width=7, height=7, eps=FALSE>>=
plot(fw)
@
  \caption{Plot of the fit of a continuous distribution (a Weibull
  distribution fitted to serving sizes from the \code{groundbeef} data set)}
  \label{plotcontfit}
\end{figure}




\subsubsection{Plots to compare multiple fits}
\label{multfit:plots}
Functions \code{denscomp}, \code{cdfcomp},
\code{qqcomp} and \code{ppcomp}, enable the visual comparison
of the empirical and various theoretical distributions fitted
on a same data set, using one of the four plots
provided by \code{plotdist}. These functions must be called with a first argument 
corresponding to a list of objects of class \code{fitdist}, and optionaly
further arguments to customize the plot (see the reference 
manual~\cite{fitdistrplus} for lists of arguments that may be changed
for each plot), as in the following example comparing the fit of
Weibull, lognormal and gamma distributions to \code{groundbeef} data set.
On Figure~\ref{groundbeef:comp}, we compare density, quantile, distribution and
probability functions.
%%% R code
<<fitgroundbeef.poisnbinom.echo, echo=TRUE, fig=FALSE>>=
fg <- fitdist(groundbeef$serving,"gamma")
fln <- fitdist(groundbeef$serving,"lnorm")
par(mfrow=c(2, 2))
denscomp(list(fw,fln,fg), legendtext=c("Weibull", "lognormal", "gamma"),
  xlab="serving sizes (g)", lwd=2)
qqcomp(list(fw,fln,fg), legendtext=c("Weibull", "lognormal", "gamma"),
	xlab="theo. quantiles", lwd=2, line01=FALSE, fitcol=2:4, ylim=c(0,300))
cdfcomp(list(fw,fln,fg), legendtext=c("Weibull", "lognormal", "gamma"),
  xlab="serving sizes (g)", lwd=2)
ppcomp(list(fw,fln,fg), legendtext=c("Weibull", "lognormal", "gamma"),
  xlab="theo. prob.", lwd=2, line01=FALSE, fitcol=2:4)
@

\begin{figure}[htb!]
  \centering
<<fitgroundbeefpoisnbinomplot, echo=FALSE, fig=TRUE, width=7, height=7, eps=FALSE>>=
fg <- fitdist(groundbeef$serving,"gamma")
fln <- fitdist(groundbeef$serving,"lnorm")
par(mfrow=c(2, 2))
denscomp(list(fw,fln,fg), legendtext=c("Weibull","lognormal","gamma"),
  xlab="serving sizes (g)", lwd=2)
qqcomp(list(fw,fln,fg), legendtext=c("Weibull","lognormal","gamma"),
  xlab="theo. quantiles", lwd=2, line01=FALSE, fitcol=2:4, ylim=c(0,300))
cdfcomp(list(fw,fln,fg), legendtext=c("Weibull","lognormal","gamma"),
  xlab="serving sizes (g)", lwd=2)
ppcomp(list(fw,fln,fg), legendtext=c("Weibull","lognormal","gamma"),
  xlab="theo. prob.", lwd=2, line01=FALSE, fitcol=2:4)
@  
%\subfloat[Densities]{ 
% %%% R code
%<<fittoxocarapoisnbinomplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
%    denscomp(list(fw,fln,fg),legendtext=c("Weibull","lognormal","gamma"),
%    xlab="serving sizes (g)",lwd=2)
%@
%\label{compdens}}
%  \caption{Comparison of density plots of various distributions fitted on continuous data
%  (Weibull, gamma and lognormal
%  distributions fitted to serving sizes from the ``ground beef'' data set)}
%  \label{compdens}
%\end{figure}
%
%\begin{figure}[htb]
%  \centering
  
%  \subfloat[CDFs]{ 
%  %%% R code
%<<fittoxocarapoisnbinomcdfcomp, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
%    cdfcomp(list(fw,fln,fg), legendtext=c("Weibull","lognormal","gamma"),
%    	xlab="serving sizes (g)", lwd=2)
%@
%\label{compcdf} }
  \caption{Comparison of CDF plots of various distributions fitted on continuous data
  (Weibull, gamma and lognormal
  distributions fitted to serving sizes from the ``ground beef'' data set)}
\label{groundbeef:comp}  
%  \label{compcdf}
\end{figure}


\setkeys{Gin}{width=0.8\textwidth} %default


%In such a plot, data may be represented in a log scale when required, by just fixing the argument
%\texttt{xlogscale} to \texttt{TRUE} in the call to \texttt{cdfcomp}.
% completer avec tout ce qu'on peut changer dans cdfcomp : PAS FORCEMENT UTILE


\mytodo{COMMENT THEM, ESPECIALLY THE QQPLOT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!}


\clearpage

\subsubsection{Measures of goodness-of-fit}
\label{GOF:measures}
%%%%%%%%%%
The purpose of goodness-of-fit statistics aims to measure the distance beetween
the cumulative distribution function $F$ defined from the fitted parametric distribution
with the empirical distribution function $F_{n}$ based on the data.
When fitting continuous distributions, three  goodness-of-fit statistics are classicaly considered: 
Cramer-von Mises, Kolmogorov-Smirnov and Anderson-Darling statistics.
They can be computed using the function \code{gofstat}
as defined by Stephens \cite{Stephens86}.
Table \ref{tabKSCvMAD} gives the definition and their empirical estimate.


\mytodo{check formula in Table 1}

\begin{table}[htb!]
  \begin{center}
    \caption{Goodness-of-fit statistics as defined by Stephens \cite{Stephens86}.}
    \begin{tabular}{lll}
    \hline
      Statistic  & General formula & Computational formula\\
    \hline
      Kolmogorov-Smirnov   & $\sup|F_{n}(x) - F(x)|$ &
      $\max(D^{+},D^{-})$ with\\
      (KS)&& $D^{+}=\max\limits_{i=1,\dots,n}\left(\frac{i}{n} - F(x_{i})\right)
      ;D^{-}=\max\limits_{i=1,\dots,n}\left(F(x_{i})-\frac{i-1}{n}\right)$ \\
    \hline
      Cramer-von Mises  & n $\int_{-\infty}^{\infty}(F_{n}(x) - F(x))^2 dx$ &
        $\frac{1}{12n} + \sum\limits_{i=1}^n \left(F(x_{i})-\frac{2i-1}{2n} \right)^{2}$\\
      (CvM)&&\\
% cvm <- 1/(12*n) + sum( ( theop - (2 * seq(1:n) - 1)/(2 * n) )^2 )
    \hline
      Anderson-Darling  & n $\int_{-\infty}^{\infty}\frac{(F_{n}(x) - F(x))^2}{F(x) (1 - F(x))} dx$
      & $-n -\frac{1}{n}\sum\limits_{i=1}^n \left((2i-1)\log(F(x_{i})+\log(1-F(x_{n+1-i})) )\right)$ \\
      (AD) &    & \\
% ad <- - n - mean( (2 * seq(1:n) - 1) * (log(theop) + log(1 - rev(theop))) )
    \hline
    \end{tabular}
    \label{tabKSCvMAD}
  \end{center}
\end{table}

%%% R code
<<fitgroundbeef.weibull.gof, echo=TRUE, fig=FALSE>>=
gofstat(fw)
gofstat(fln)
gofstat(fg)
@

As giving  more weight to distribution tails, 
Anderson-Darling statistics is of special interest where it is important to place equal 
emphasis on fitting a distribution at the tails as well as the main body, 
as it is often the case in risk assessment \cite{Cullen99,Vose10}. 
Nevertheless, this statistics should 
be used cautiously when comparing fits of various distributions, keeping in mind that the weighting of each
cdf quadratic difference is dependent of the theoretical distribution. 


Even if specifically recommended for discrete distributions, the Chi-squared statistic may also be used for
continuous distributions (see Section~\ref{discrete:GOF:stat} and the reference 
manual~\cite{fitdistrplus} for examples).


\mytodo{
ADD A PART ON THE DRAWBACKS OF EACH GOFSTAT AND THE PREFERABLE USE OF AIC AND BIC TO COMPARE
FITS ESPECIALLY WHEN THE NUMBER OF PARAMETERS CHARACTERIZING THE DISTRIBUTIONS DIFFERS 
}

\subsubsection{Goodness-of-fit tests}
\label{GOF:tests}
%%%%%%%%%%
\mytodo{TO BE REMOVED AT LEAST IN THE JSS VERSION}

For continuous distributions, an approximate Kolmogorov-Smirnov test is 
performed by assuming the distribution parameters known. The critical value defined by Stephens~\cite{Stephens86} 
for a completely specified distribution is used to reject or not the 
distribution at the significance level 0.05. Because of this approximation, the result of the test
(decision of rejection of the distribution or not) is returned only for datasets with more 
than 30 observations. Note that this approximate test may be too conservative. 

For datasets with more than 5 observations and for continuous distributions for 
which the test is described by Stephens~\cite{Stephens86} for maximum likelihood
estimations (exponential, Cauchy, gamma and Weibull),
the Cramer-von Mises and Anderson-darling tests are performed as described by Stephens~\cite{Stephens86}. 
Those tests take into 
account the fact that the parameters are not known but estimated from the data. The result is the 
decision to reject or not the distribution at the significance level 0.05. Both tests are available
only for maximum likelihood estimations.

When the Chi-squared statistic is computed (for discrete or optionnaly continuous distributions), 
and if the degree of freedom (nb of cells - nb of parameters - 1)  of the corresponding distribution 
is strictly positive, the p-value of the Chi-squared test is returned.

The results of the tests are not printed, unless the argument \code{print.test}
is set to \code{TRUE}. We chose not to print their results by default, as 
goodness-of-fit tests are often misused. As for any null-hypothesis significance
test, the non reject of the null hypothesis dose not imply its acceptation. However, this
misinterpretation of p-values is very common and comes from the wrong assumption that
absence of evidence is evidence of absence ~\cite{Altman96}.
On the contrary, in some cases, especially on very big datasets, 
even if the null hypothesis is rejected, a fitted distribution may be 
chosen as the best one among simple distributions to describe an empirical distribution, if the goodness-of-fit
plots do not show strong differences between empirical and theoretical distributions.

%Now let us look at the Chi-squared test results for the fit of a negative binomial distribution 
%to ``toxocara'' data set :
%<<echo=TRUE,fig=FALSE>>=
%gofstat(fnb,print.test = TRUE)
%@

%A warning message appears as one of the theoretical counts is under 5 using the default breaks 
%(see Section~\ref{GOF:measures}). In order to solve this problem, one may specify breaks 
%more adapted for the realization of the test.
%<<echo=TRUE,fig=FALSE>>=
%gofstat(fnb,chisqbreaks=c(0,1,4,8,20),print.test=TRUE)$chisqtable
%@

%From goodness-of-fit graphs, Chi-squared statistics, AIC and BIC values,
%it seems better to choose the fit of a negative binomial distribution
%for this dataset even it has one more parameter than the Poisson one. This was not obvious while
%looking at the skewness-kurtosis graph. This graph must be used cautiously especially for continuous 
%distributions far from the normal distribution or for discrete distributions. It is only indicative.

%\clearpage

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Fitting distributions to other types of data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{The case of discrete data}
\label{discrete}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The \code{toxocara} data set corresponds to the observation of a discrete variable, 
the number of \emph{Toxocara cati} parasites present in digestive tract,
on a random sample of feral 
cats living on Kerguelen island (\cite{Fromont01}). We will use it in order 
to illustrate the case of discrete data.
%%% R code
<<dattoxocara, echo=TRUE>>=
data(toxocara)
str(toxocara)
@



\subsubsection{Graphical display of the observed distribution}
\label{discrete:graph}
%%%%%%%%%%
In some cases a discrete variable may be plotted as a continuous one, for example for a large data set
from a binomial distribution converging to a normal one, but
Function \code{plotdist} also proposes specific plots in density and in cdf
for discrete variables (Figure~\ref{plotdistdisc}):
%%% R code
<<figtoxocara.echo, echo=TRUE, fig=FALSE, eval=FALSE>>=
plotdist(toxocara$number, discrete = TRUE)
@
\begin{figure}[htb!]
  \centering
  %%% R code
<<figtoxocaraplot, echo=FALSE, fig=TRUE, width=12, height=6, eps=FALSE>>=
plotdist(toxocara$number, discrete = TRUE)
@
  \caption{Density and cdf plots of an empirical distribution for a discrete variable
  (number of \emph{Toxocara cati} parasites from the \code{toxocara} data set)}
  \label{plotdistdisc}
\end{figure}

As for continuous non-censored data (see Section~\ref{Empirical})
Function \code{descdist} can be used, but with the argument \code{discrete}
fixed to \code{TRUE}. This function will especially 
compute skewness and kurtosis values, and plot them in a skewness-kurtosis plot 
 with skewness and kurtosis values or set of values of 
Poisson and negative binomial
%(Figure~\ref{Cullenplotdisc}), 
together with values for the
normal distribution, to which discrete distributions may converge. 

%Looking at the skewness-kurtosis plot (Figure~\ref{Cullenplotdisc}) obtained
%for the number of \emph{Toxocara cati} parasites from 
%the ``Toxacara'' data set, one could try the fit of Poisson and negative-binomial distributions.

%<<echo=TRUE, fig=FALSE>>=
%descdist(toxocara$number,discrete = TRUE,boot=1000)
%@
%\begin{figure}[htb]
%  \centering
%<<echo=FALSE, results=hide, fig=TRUE>>=
%descdist(toxocara$number,discrete = TRUE,boot=1000)
%@
%  \caption{Skewness-kurtosis plot for a discrete variable
%  (number of \emph{Toxocara cati} parasites from the ``Toxocara'' data set)}
%  \label{Cullenplotdisc}
%\end{figure}


\subsubsection{Maximum likelihood estimation}
\label{discrete:MLE}
%%%%%%%%%%
The fit of a discrete distribution to discrete data by maximum
likelihood estimation requires the same procedure as for continuous non-censored data. 
As an example, 
using the \code{toxocara} data set, Poisson and
negative distributions may be easily fitted and AIC values compared, in this case
giving the preference
to the negative binomial distribution, with a much smaller AIC value.
%%% R code
<<fittoxocara.poisnbinom, echo = TRUE, fig = FALSE>>=
fp <- fitdist(toxocara$number, "pois")
summary(fp)
fnb <- fitdist(toxocara$number, "nbinom")
summary(fnb)
@

\subsubsection{Goodness-of-fit plot}
\label{discrete:GOF:graph}
%%%%%%%%%%
For discrete distributions, the plot of an object of class \code{"fitdist"} simply provides
two goodness-of-fit plots comparing empirical and theoretical distributions
in pdf and in cdf.
As an exemple, let us look at the plot of the previous fit of a negative binomial distribution 
to the \code{toxocara} data set. 

<<fittoxocara.poisnbinom.echo, echo=TRUE, fig=FALSE>>=
plot(fnb, col="blue")
@
\begin{figure}[htb]
  \centering
<<fittoxocarapoisnbinomplot, echo=FALSE, results=hide, fig=TRUE, width=12, height=6, eps=FALSE>>=
plot(fnb, col="blue")
@
  \caption{Plot of the fit of a discrete distribution (a negative binomial distribution
  fitted to numbers of \emph{Toxocara cati} parasites from the \code{toxocara} data set)}
  \label{plotdiscfit}
\end{figure}


\subsubsection{Measures of goodness-of-fit}
\label{discrete:GOF:stat}
%%%%%%%%%%

When fitting discrete distributions, the Chi-squared statistic is computed by 
Function \code{gofstat} using cells defined 
by the argument \code{chisqbreaks} or cells automatically defined from the data in order 
to reach roughly the same number of observations per cell, roughly equal to the argument
\code{meancount}, or sligthly more if there are some ties. 
The choice to define cells from the empirical distribution (data) and not from the
theoretical distribution was done to enable the comparison of Chi-squared values obtained
with different distributions fitted on a same dataset.
If arguments \code{chisqbreaks} and \code{meancount} 
are both omitted, \code{meancount} is fixed in order to obtain roughly $(4n)^{2/5}$ cells, 
with $n$ the length of the dataset~\cite{Vose10}. Using this default option with 
the fit of a negative binomial distribution to \code{toxocara} data set gives following results :
%%% R code
<<fittoxocara.poisnbinom.gof, echo=TRUE, fig=FALSE>>=
gofstat(fnb)
@

Among its returned values, Function \code{gofstat} provides a table with observed and theoretical 
counts used for the Chi-squared calculations:
%%% R code
<<fittoxocara.poisnbinom.gof.chisq, echo=TRUE,fig=FALSE>>=
gofstat(fnb)$chisqtable
@

\subsection{The special case of censored data}
\label{censored}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Censored data may contain left censored, right censored and interval censored values, 
with several lower and upper bounds. Data must be coded into a dataframe with two columns,
 respectively named \code{left} 
 and \code{right}, describing each observed value as an interval.
 The \code{left} column contains either \code{NA} for left censored observations,
 the left bound of the interval for interval censored observations,
 or the observed value for non-censored observations.
 The \code{right} column contains either \code{NA} for right censored observations,
 the right bound of the interval for interval censored observations,
 or the observed value for non-censored observations.
 
The \code{smokedfish} data set, included in the package,
corresponds to the observation of a continuous censored variable, 
the \emph{Listeria monocytogenes} microbial concentration, on a random
sample of smoked fish distributed on the Belgian market in the period
2005 to 2007 (\cite{Busschaert10}).
Censored data are coded within 2 columns named left and right, describing
each observed value of \emph{Listeria monocytogenes} concentration 
(in $CFU.g^{-1}$) as an interval. 
The left column contains either \code{NA} for
left censored observations, the left bound of the interval for interval censored
observations, or the observed value for non-censored observations. The right
column contains either \code{NA} for right censored observations, the right bound of
the interval for interval censored observations, or the observed value for noncensored
observations.
%%% R code
<<datsmokedfish, echo=TRUE>>=
data(smokedfish)
str(smokedfish)
@
     
\subsubsection{Graphical display of the observed distribution}
\label{censored:graph}
%%%%%%%%%%

Using censored data such as those coded in the \code{smokedfish} data set,
the empirical distribution may be plotted using the \code{plotdistcens} function.
By default, this function uses the EM approach of Turnbull \cite{Turnbull74} to compute the overall
empirical cdf curve with confidence intervals, by calls to \code{survfit}
and \code{plot.survfit} functions from the \pkg{survival} package.
Let us see such a plot for \code{smokedfish} data set after classical transformation
of microbial counts in decimal logarithm (Figure~\ref{plotdistcens}).

% ------------------ previous method -----------------------------
%Data are reported directly as segments for interval, left and right censored data, 
%and as points for non-censored data. Before plotting, observations are ordered and a rank r
%is associated to each of them. Left censored observations are ordered
%first, by their right bounds. Interval censored and non censored observations
%are then ordered by their mid-points and, at last, right censored observations are
%ordered by their left bounds. If argument \texttt{leftNA} (resp. \texttt{rightNA}) is finite,
%left censored (resp. right censored) observations are considered as interval censored
%observations and ordered by mid-points with non-censored and interval censored data.
%It is sometimes necessary to fix \texttt{leftNA} or \texttt{rightNA} to a realistic 
%extreme value, even if not exactly known, to obtain a reasonable global ranking of 
%observations. After ranking, each of the n observations is plotted as a point (one x-value) 
%or a segment (an interval of possible x-values),
%with an y-value equal to r/n, r being the rank of each observation in the global ordering
%previously described.

% VIRER? INUTILE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
%%% R code
<<plotsmokedfish.echo, echo=TRUE, fig=FALSE>>=
log10C <- data.frame(left=log10(smokedfish$left), right=log10(smokedfish$right))
plotdistcens(log10C)
@


\setkeys{Gin}{width=0.5\textwidth} %default

\begin{figure}[htb!]
  \centering
  %%% R code
<<plotsmokedfishplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE, result=hide>>=
plotdistcens(log10C)
@
  \caption{CDF plot of censored data (microbial counts from 
   the \code{smokedfish} data set)}
  \label{plotdistcens}
\end{figure}




\subsubsection{Maximum likelihood estimation}
\label{censored:MLE}
%%%%%%%%%%

As for non censored data, one or more parametric distributions may then
be fitted to the censored data set, one at a time, but using in this case
the \code{fitdistcens} function. This function estimates distribution parameters $\theta$
by maximizing the likelihood for censored data defined as:
  \begin{equation}
    \label{likelihoodC}
    L(\theta)=\prod_{i=1}^{N_{nonC}} f(x_{i}|\theta)
    \times \prod_{j=1}^{N_{leftC}} F(x^{upper}_{j}|\theta)
    \times \prod_{k=1}^{N_{rightC}} (1- F(x^{lower}_{k}|\theta))
    \times \prod_{m=1}^{N_{intC}} (F(x^{upper}_{m}|\theta)- F(x^{lower}_{j}|\theta))
  \end{equation}
with $x_{i}$ the $N_{nonC}$ non-censored observations,
$x^{upper}_{j}$ upper values defining the $N_{leftC}$ left-censored observations,
$x^{lower}_{k}$ lower values defining the $N_{rightC}$ right-censored observations,
$[x^{lower}_{m} ; x^{upper}_{m}]$ the intervals defining the $N_{intC}$ interval-censored observations,
and F the cumulative distribution function of the parametric distribution.

As \code{fitdist}, it returns the results of the fit of any parametric distribution
to a data set as an S3 class object that may be easily printed,
summarized or plotted.
For ``smokedfish'' data set, a normal distribution may be fitted to log
transformed data as commonly done for microbial count data. 
%%% R code
<<fitsmokedfish.echo, echo=TRUE, fig=FALSE>>=
flog10Cn <- fitdistcens(log10C, "norm")
summary(flog10Cn)
@

As with \code{fitdist}, for some distributions (see \cite{fitdistrplus} for details), 
it is necessary to specify initial 
values for the distribution parameters in the argument \code{start}.
The \code{plotdistcens} function can help to find correct initial values for 
the distribution parameters in non trivial cases, by an manual iterative use if necessary.

\subsubsection{Goodness-of-fit plot}
\label{censored:GOF:graph}
%%%%%%%%%%
Only one goodness-of-fit plot is provided for censored data, corresponding to the theoretical 
cumulative distribution function added to the plot of censored data presented
in Section~\ref{censored:graph}. The \code{cdfcompcens} function can be used to compare the fit of various
distributions to the same censored data set. Its call is similar to the one \code{cdfcomp}. Below is
an example of comparison of two fitted distribution to \code{smokedfish} data set (see Figure~\ref{cdfcompcens}).
%%% R code
<<fitsmokedfish.cdfcomp.echo, echo=TRUE, fig=FALSE, eval=FALSE>>=
flog10Cl <- fitdistcens(log10C, "logis")
cdfcompcens(list(flog10Cn, flog10Cl),
    legendtext=c("normal distribution", "logistic distribution"),
    xlab="bacterial concentration (log10[CFU/g])", ylab="F")
@
\begin{figure}[htb!]
  \centering
  %%% R code
<<fitsmokedfishcdfcompplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
flog10Cl <- fitdistcens(log10C, "logis")
cdfcompcens(list(flog10Cn,flog10Cl),
    legendtext=c("normal distribution","logistic distribution"),
    xlab="bacterial concentration (log10[CFU/g])",ylab="F")
@
  \caption{Goodness-of-fit CDF plots for fits of continuous distributions
  on censored data (Comparison of lognormal and loglogistic distributions fitted to microbial counts from 
   the \code{smokedfish} data set)}
  \label{cdfcompcens}
\end{figure}



%<<echo=TRUE, fig=FALSE>>=
%plot(flog10C)
%@
%\begin{figure}[htb]
%  \centering
%<<echo=FALSE, results=hide, fig=TRUE>>=
%plot(flog10C)
%@
%  \caption{Goodness-of-fit CDF plot for a fit of a continuous distribution
%  on censored data (a lognormal distribution fitted to microbial counts from 
%   the ``smoked fish'' data set)}
%  \label{plotfitdistcens}
%\end{figure}


Computations of goodness of fit statistics have not yet been 
developed for fits using censored data, so the quality of fit 
may only be estimated from the loglikelihood and the goodness-of-fit CDF plot.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Advanced topics}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Alternative methods for parameter estimation}
\label{Alternatives}

Despite maximum likelihood estimation is the default estimation proposed by 
\code{fitdist}, other classical estimation methods can be handled to estimate parameters for non-censored data.
Thus, this subsection focuses on alternative estimation methods.
We use a classical data set from the Danish insurance industry published in \cite{mcneil97}.
In \pkg{fitdistrplus}, the data set is stored in \code{danishuni} and \code{danishmulti} for univariate and
multivariate versions, respectively.


\subsubsection{Maximum goodness-of-fit estimation}
\label{MGE}
%%%%%%%%%%
One of the alternative for continuous distributions
is the maximum goodness-of-fit estimation method also called
minimum distance estimation method. In this package this method is proposed with
eight different distances, the three classical distances defined
in Table~\ref{tabKSCvMAD},
or one of the variants of the Anderson-Darling distance proposed by \cite{Luceno06} and defined in 
Table~\ref{modifiedAD}.
The right-tail AD gives more weight only to the right tail, the left-tail AD
gives more weight only to the left tail. Either of the tails, or both of them,
can receive even larger
weights by using second order Anderson-Darling Statistics.

\begin{table}[htb!]
  \begin{center}
    \caption{Modified Anderson-Darling statistics as defined by Luceno \cite{Luceno06}.}
    \begin{tabular}{lll}
    \hline
      Statistic  & General formula & Computational formula\\
    \hline
      Right-tail AD  & $\int_{-\infty}^{\infty}\frac{(F_{n}(x) - F(x))^2 }{1 - F(x)}  dx$
      & $\frac{n}{2} -2\sum_{i}F(x_{i}) -\frac{1}{n}\sum_{i}((2i-1)ln(1-F(x_{n+1-i})))$ \\
      (ADR) &  &\\
    \hline
      Left-tail AD  & $\int_{-\infty}^{\infty}\frac{(F_{n}(x) - F(x))^2 }{(F(x))}  dx$
      & $-\frac{3n}{2} +2\sum_{i}F(x_{i}) -\frac{1}{n}\sum_{i}((2i-1)ln(F(x_{i})))$ \\
      (ADL) &  &\\
    \hline
      Right-tail AD  & $ad2r=\int_{-\infty}^{\infty}\frac{(F_{n}(x) - F(x))^2 }{(1 - F(x))^{2}}  dx$
      & $ad2r=2\sum_{i}ln(1-F(x_{i})) +\frac{1}{n}\sum_{i} \frac{2i-1}{1-F(x_{n+1-i})}$ \\
      2nd order (AD2R) &  &\\
    \hline
      Left-tail AD  & $ad2l=\int_{-\infty}^{\infty}\frac{(F_{n}(x) - F(x))^2 }{(F(x))^{2}}  dx$
      & $ad2l=2\sum_{i}ln(F(x_{i})) +\frac{1}{n}\sum_{i}\frac{2i-1}{F(x_{i})}$ \\
      2nd order (AD2L) &  &\\
    \hline
    AD 2nd order & $ad2r+ad2l$
      & $ad2r+ad2l$ \\
    (AD2) &  &\\
    \hline
    \end{tabular}
    \label{modifiedAD}
  \end{center}
\end{table}

To fit a distribution by maximum goodness-of-fit estimation, one
needs to fix the argument \code{method}
to \code{"mge"} in the call to \code{fitdist} and to specify the argument \code{gof}
coding for the chosen goodness-of-fit distance. 
% Character string coding for the eight 
% proposed goodness-of-fit distances are given in Table~\ref{MGEdist}.
This function is intended to be used only with continuous variables and distributions.
%It may be useful to fit distributions for which maximum likelihood does not provide
%good estimations, such as the uniform distribution (\cite{Luceno06}).
Below an example of estimation on the \code{danishuni} data set with the three classical 
goodness-of-fit distances.
We compare the fitting methods with the distribution function.
%%% R code
<<danish.mge, echo=TRUE, fig=FALSE>>=
data(danishuni)
flndanishAD <- fitdist(danishuni$Loss, "lnorm", method="mge", gof="AD")
flndanishAD2L <- fitdist(danishuni$Loss, "lnorm", method="mge", gof="AD2L")
flndanishKS <- fitdist(danishuni$Loss, "lnorm", method="mge", gof="KS")
flndanishCvM <- fitdist(danishuni$Loss, "lnorm", method="mge", gof="CvM")
flndanishMLE <- fitdist(danishuni$Loss, "lnorm", method="mle")
cdfcomp(list(flndanishAD, flndanishAD2L, flndanishKS, flndanishCvM, flndanishMLE), 
        legend=c("AD", "AD2L", "KS", "CvM", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@

As plotted \ref{fig:danish:mge}, the lognormal distribution is not appropriate to model heavy-tailed datae, but
this is not the purpose here.
The second-order Anderson-Darling distance provides the least conservative fit for high quantiles, whereas the
(classic)  Anderson-Darling distance is the most conservative fit among goodness-of-fit distances.

\begin{figure}[htb!]
  \centering
%%% R code
<<danishmgeplot, echo=FALSE, fig=TRUE, eps=FALSE, width=4, height=4>>=
cdfcomp(list(flndanishAD, flndanishAD2L, flndanishKS, flndanishCvM, flndanishMLE), 
        legend=c("AD", "AD2L", "KS", "CvM", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@
\caption{Comparison of statistical distance when fitting lognormal distribution on \code{danishuni}}
\label{fig:danish:mge}
\end{figure}

Maximum goodness-of-fit estimation may also be useful to give
more weight to data at one tail of the distribution. 
In ecotoxicology, species sensitivity distributions such 
as those presented in \cite{Hose04} are often
fitted by a lognormal or a loglogistic distribution
so as to estimate a low percentile, often 5$\%$ percentile,
named the hazardous concentration 5$\%$ (HC5). This value is then interpreted as a value of the
contaminant concentration protecting 95$\%$ of the species. In this context, one may consider
to fit the parametric distribution by giving more weight to the left tail of the empirical distribution.
In the following example of \code{endosulfan} data set, we use left tail 
Anderson-Darling distances of first or second order
(see Figure~\ref{plotfitMGE}).

%%% R code
<<mge.gofcomp.echo, echo=TRUE, fig=FALSE>>=
data(endosulfan)
ATV <-subset(endosulfan,group == "NonArthroInvert")$ATV
flnMGECvM <- fitdist(ATV,"lnorm",method="mge",gof="CvM")
flnMGEAD <- fitdist(ATV,"lnorm",method="mge",gof="AD")
flnMGEADL <- fitdist(ATV,"lnorm",method="mge",gof="ADL")
flnMGEAD2L <- fitdist(ATV,"lnorm",method="mge",gof="AD2L")
cdfcomp(list(flnMGECvM, flnMGEAD, flnMGEADL, flnMGEAD2L),
xlogscale = TRUE, main = "GOF estimation with different stat. distances",
legendtext = c("Cramer-von Mises (CvM)", "Anderson-Darling",
"Left-tail Anderson-Darling", "Left tailed Anderson-Darling of second order"),cex=0.7,
xlegend = 500, ylegend = 0.15)
@
\begin{figure}[htb!]
  \centering
  %%% R code
<<mgegofcompplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
cdfcomp(list(flnMGECvM, flnMGEAD, flnMGEADL, flnMGEAD2L),
xlogscale = TRUE,main="",
legendtext = c("Cramer-von Mises","Anderson-Darling",
"Left-tail Anderson-Darling","Left tailed Anderson-Darling of second order"),cex=0.7,
xlegend = 500, ylegend = 0.15)
@
  \caption{Comparison of one distribution fitted by maximum goodness-of-fit using
  various goodness-of-fit distances (a lognormal distribution fitted to acute toxicity values
  from the \code{endosulfan} data set)}
  \label{plotfitMGE}
\end{figure}

\subsubsection{Moment matching estimation}
\label{MME}
%%%%%%%%%%
Another method commonly used to fit parametric distribution consists in estimating
the parameters $\theta$ at the values that makes the first theoretical raw moments of the parametric 
distribution equal to the empirical moments (Equation~\ref{moments}).
  \begin{equation}
    \label{moments}
    E(X^{k}|\theta)=\frac{1}{n}\sum_{i=1}^{n}x_{i}^{k} 
  \end{equation}
for $k=1,\ldots,p$, with $p$ the number of parameters to estimate and
 $x_{i}$ the $n$ observations of variable $x$.
For moments of order greater or equal than 2, it is also relevant to match centered moments as
given by Equation (\ref{centmoments}).
  \begin{equation}
    \label{centmoments}
    E\left((X-E(X))^{k}|\theta\right)=\frac{1}{n}\sum_{i=1}^{n}(x_{i}-\bar x_n)^{k} 
  \end{equation}
This method called moment matching estimation can be performed fixing the argument \code{method}
to \code{"mme"} in the call to fitdist.
The estimate is computed by a closed formula for following distributions:
normal, lognormal, exponential, Poisson, gamma, logistic, negative binomial,
geometric, beta and uniform distributions (i.e. base \proglang{R} distributions).
In this case, for distributions characterized by one parameter (geometric, Poisson and exponential),
this parameter is simply estimated by matching theoretical and observed means, and for distributions 
characterized by two parameters, these parameters are estimated by matching theoretical and observed 
means and variances (see e.g. \cite{Vose10}).
Otherwise, for not so-common distributions, the equation of moments is solved numerically using 
the \code{optim} function  by minimizing the
sum of squared differences between observed and theoretical moments (see the \pkg{fitdistrplus} reference
manual~\cite{fitdistrplus}
for technical details).

Our first example of fitting a lognormal distribution on \code{danish} data set uses a closed formula.
Comparing the two fitted distributions functions, we observe on Figure \ref{fig:danish:mme} 
that the moment matching estimation is
far more conservative than the maximum likelihood estimation, which is also  more conservative than
goodness-of-fit estimation.
%%% R code
<<danish.mme, echo=TRUE, fig=FALSE>>=
flndanishMME <- fitdist(danishuni$Loss, "lnorm", method="mme", order=1:2)
cdfcomp(list(flndanishMME, flndanishMLE), 
        legend=c("MME", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@


\begin{figure}[htb!]
  \centering
  %%% R code
<<danishmmeplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
cdfcomp(list(flndanishMME, flndanishMLE), 
        legend=c("MME", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@
\caption{Comparison between MME and MLE when fitting lognormal distribution on \code{danishuni}}
\label{fig:danish:mme}
\end{figure}


Our second example is the fitting of a Pareto type II distribution.
We use the implementation of \pkg{actuar} package providing moments and limited expected value
for that distribution (in addition to \code{d}, \code{p}, \code{q} and \code{r} functions,
see \cite{actuar12}).
Fitting a heavy-tailed distribution for which the first and the second moments do not exist for
certain values of the shape parameter requires some cautiousness.
This is carried out by providing a lower and an upper bounds for the optimization by \code{optim}.
Our call below immadiately calls the L-BFGS-B optimization method, since this quasi-Newton
allows box constraints\footnote{That's what the B stands for.}.
We also observe that the fitting is relatively good when comparing empirical and fitted moments.
Note that we have to pass a function for computing the empirical raw moment to \code{fitdist}.
<<danish.mme.pareto, echo=TRUE, fig=FALSE>>=
library(actuar)
memp <- function(x, order) ifelse(order == 1, mean(x), sum(x^order)/length(x))
fparedanishMME <- fitdist(danishuni$Loss, "pareto", method="mme", order=1:2, 
      memp="memp", start=c(shape=10, scale=10), lower=2+1e-6, upper=Inf)
c(theo = mpareto(1, fparedanishMME$estimate[1], fparedanishMME$estimate[2]),
emp = memp(danishuni$Loss, 1))  
c(theo = mpareto(2, fparedanishMME$estimate[1], fparedanishMME$estimate[2]),
emp = memp(danishuni$Loss, 2))
@

    

\subsubsection{Quantile matching estimation}
\label{QME}
%%%%%%%%%%
Fitting of a parametric distribution may also be done by matching theoretical quantiles
of the parametric distributions (for specified probabilities) to the empirical quantiles.
Equation (\ref{quantiles}) below is thus similar to Equations (\ref{moments}) and (\ref{centmoments})
  \begin{equation}
    \label{quantiles}
    F^{-1}(p^{k}|\theta)=Q_{n,p_{k}} 
  \end{equation}
for $k=1,\ldots,p$, with $p$ the number of parameters to estimate (dimension of $\theta$ if there is
no fixed parameters) and
 $Q_{n,p_{k}}$ the empirical quantiles calculated from data for specified probabilities $p_{k}$.

Quantile matching can be performed by fixing the argument \code{method}
to \code{"qme"} in the call to fitdist and adding an argument \code{probs}
defining the probabilities for which the quantile matching is performed.
The length of this vector must be equal
to the number of parameters to estimate. Empirical quantiles are computed using the
\code{quantile} function of the \pkg{stats} package using the \texttt{type} 
argument  equal to 7 by default, but the type of quantile
can be easily changed by using the \texttt{qty} argument in the call to the \texttt{qme} function.   
The quantile matching is carried out numerically, 
by minimizing the
sum of squared differences between observed and theoretical quantiles.
%%% R code
<<danish.qme.echo, echo=TRUE, fig=FALSE>>=
flndanishQME1 <- fitdist(danishuni$Loss, "lnorm", method="qme", probs=c(1/3, 2/3))
flndanishQME2 <- fitdist(danishuni$Loss, "lnorm", method="qme", probs=c(3/4, 4/5))
cdfcomp(list(flndanishQME1, flndanishQME2, flndanishMLE), 
        legend=c("QME(1/3, 2/3)", "QME(3/4, 4/5)", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@
Above is an example of fitting of a lognormal distribution to \code{danishuni} data set 
by matching probabilities $(p_1= 1/3, p_2=2/3)$ and $(p_1= 3/4, p_2=4/5)$.
As expected, the second QME fit is more conservative when looking at the tail of the distributions.
Compared to the maximum likelihood estimation, the second QME fit is also more conservative, whereas
the first QME fit is less conservative.
The quantile matching estimation is of particular interest when we need a good precision 
around particular quantiles, e.g. $p=99.5\%$ for Solvency II insurance context.





\begin{figure}[htb!]
  \centering
  %%% R code
<<danishqmeplot, echo=FALSE, fig=TRUE, width=4, height=4, eps=FALSE>>=
cdfcomp(list(flndanishQME1, flndanishQME2, flndanishMLE), 
        legend=c("QME(1/3, 2/3)", "QME(3/4, 4/5)", "MLE"), main="Fitting lognormal distribution",
        xlogscale=TRUE, datapch="*")
@
\caption{Comparison between QME and MLE when fitting lognormal distribution on \code{danishuni}}
\label{fig:danish:qme}
\end{figure}




\subsubsection{Customization of the optimization algorithm}
\label{Customization}
%%%%%%%%%%
Each time a numerical minimization (or maximization) is carried out using \code{fitdist}, 
the \code{optim} function of the \pkg{stats} package  is used by default with the 
\code{"Nelder-Mead"} method for distributions characterized by more than one parameter and
the \code{"BFGS"} method for distributions characterized by only one parameter 
Sometimes the default algorithm fails to converge. It may then
be interesting to change some options of the \code{optim} function or to use another optimization
function than \code{optim} to maximize the likelihood or to minimize a squared difference.

The argument \code{optim.method} may be used in the call to \code{fitdist} or
\code{fitdistcens}. It will internally be passed to \code{mledist} and to \code{optim}.
This argument may be fixed to \code{"Nelder-Mead"} (the robust derivative-free Nelder and Mead method), 
\code{"BFGS"} (the BFGS quasi-Newton method), \code{"CG"} (the conjugate gradient hessian-free method), 
\code{"SANN"} (a variant of (stochastic) simulated annealing) or \code{"L-BFGS-B"} (a modification of the BFGS 
quasi-Newton method which enables box constraints optimization and limited-memory usage). 
For the use of the last method the 
arguments \code{lower} and/or \code{upper} also have to be passed. More details on these optimization
functions may be found in the help page of \code{optim} from the package \pkg{stats}.


Here are examples of fits of a gamma distribution to \code{groundbeef} data set with various options
of \code{optim}. Note that the conjugate gradient algorithm needs far more 
iterations to converge (around 2500 iterations)
compared to other algorithms (converging in less than 100 iterations).
%%% R code
<<optimmethod.gamma, echo=TRUE>>=
data(groundbeef)
fNM <- fitdist(groundbeef$serving, "gamma", optim.method="Nelder-Mead")
fBFGS <- fitdist(groundbeef$serving, "gamma", optim.method="BFGS") 
fSANN <- fitdist(groundbeef$serving, "gamma", optim.method="SANN")
fCG <- try(fitdist(groundbeef$serving, "gamma", optim.method="CG", control=list(maxit=10000)))
if(class(fCG) == "try-error")
  fCG <- list(estimate=NA)
@


You may also want to use another function than \code{optim} to maximize the likelihood.
This optimization function has to be specified by the argument \code{custom.optim} 
in the call to \code{fitdist} or
\code{fitdistcens}. But before that, it is necessary to customize this optimization function :
\code{custom.optim} function must have (at least) the following arguments,
\code{fn} for the function to be optimized, \code{par} for the initialized parameters. 
We assume that \code{custom.optim} should carry out a MINIMIZATION and must return
(at least) the following components: \code{par} for the estimate, \code{convergence} for the convergence
code, \code{value} for \code{fn(par)} and \code{hessian}.
Below is an example of code written to wrap \code{genoud} function from \pkg{rgenoud} package in
order to respect our optimization ``template''.
The \pkg{rgenoud} package implements the genetic (stochastic) algorithm.
%%% R code
<<optimmethod.customgenoud, echo=TRUE>>=
mygenoud <- function(fn, par, ...) 
{
   require(rgenoud)
   res <- genoud(fn, starting.values=par, ...)        
   standardres <- c(res, convergence=0)
   return(standardres)
}
@

The customized optimization function may then be passed as the argument \code{custom.optim} 
in the call to \code{fitdist}
or \code{fitdistcens}. The following code may for example be used to fit a gamma distribution to the
\code{groundbeef} data set. Note that in this example various arguments are also passed from \code{fitdist} 
to \code{genoud} :
\code{nvars}, \code{Domains}, \code{boundary.enforcement}, 
\code{print.level} and \code{hessian}.
The code below compare all the parameter estimates by the different algorithms:
shape and rate parameters are relatively the same.
%%% R code
<<optimmethod.customgenoud.fitdist, echo=TRUE, eval=TRUE>>=
fgenoud <- mledist(groundbeef$serving, "gamma", custom.optim= mygenoud, nvars=2, 
    max.generations=10, Domains=cbind(c(0,0), c(10,10)), boundary.enforcement=1, 
    hessian=TRUE, print.level=0, P9=10)
cbind(NM=fNM$estimate,
BFGS=fBFGS$estimate,
SANN=fSANN$estimate,
CG=fCG$estimate,
fgenoud=fgenoud$estimate)
@



\subsection{Uncertainty in parameter estimates}
\label{Uncertainty}


\subsubsection{Bootstrap procedures}
\label{Bootstrap}
%%%%%%%%%%

The uncertainty in the parameters of the fitted distribution may be simulated by parametric or nonparametric
bootstrap using the \code{boodist} function for non censored data and
by nonparametric bootstrap using \code{boodistcens} function for censored data. 
These functions return the bootstrapped values of parameters in a 
S3 class object which
may be plotted to visualize the bootstrap region. 
The medians and the 95 percent confidence intervals of parameters (2.5 and 97.5 percentiles) are printed 
in the summary.
If inferior to the whole number of iterations, the number of iterations for which the function converges 
is also printed in the summary.
    
The plot of an object of class \code{bootdist}  or \code{bootdistcens}
 consists in a scatterplot or a matrix of scatterplots
of the bootstrapped values of parameters providing
a representation of the joint uncertainty distribution of the fitted parameters (see Figure~\ref{fig:bootstrap}).


Below is an example of the use of the \code{bootdist} function with the previous of the Weibull distribution to 
\code{groundbeef} data set. 
%%% R code
<<fitgroundbeef.weibull.boot.echo, echo=TRUE, fig=FALSE>>=
bw <- bootdist(fw, niter=1001)
summary(bw)
plot(bw)
@
Then we fit the three-parameter distribution of Burr on \code{danishuni} data set.
As when fitting the Pareto type II distribution, we have to use a lower bound when
carrying out the optimization.
Otherwise \code{optim} do not converge.
<<fitdanish.burr.boot.echo, echo=TRUE, fig=FALSE>>=
fdan <- fitdist(danishuni$Loss, "burr", method="mle", 
  start=c(shape1=5, shape2=5, rate=10), lower=1e-1)
bdan <- bootdist(fdan,  bootmethod="param", niter=101)
summary(bdan)
plot(bdan)
@


\setkeys{Gin}{width=0.5\textwidth} %default



\begin{figure}[htb!]
  \centering
  \subfloat{
  %%% R code
<<fitgroundbeefweibullbootplot, echo=FALSE, fig=TRUE, width=6, height=6, eps=FALSE>>=
plot(bw)
@
}
\subfloat{
  %%% R code
<<fitdanishburrbootplot, echo=FALSE, fig=TRUE, width=6, height=6, eps=FALSE>>=
plot(bdan)
@
}
  \caption{Bootstrappped values of parameters for a fit of a distribution
characterized by two parameters (example on the fit of a Weibull distribution to
serving sizes from the \code{groundbeef} data set)}
  \label{fig:bootstrap}
\end{figure}





\subsubsection{Use of bootstrap samples}
\label{bootstrap}
%%%%%%%%%%
Bootstrap samples of parameter estimates may be used to calculate confidence intervals on each parameter
of the fitted distribution, but it is also interesting to look at the marginal distribution of the bootstrap
values in a scatterplot (or a matrix of scatterplots if the number of parameters exceeds two), and especially
to look at the potential structural correlation between parameters.

The use of the whole bootstrap sample is also of interest in the risk assessment field. Its use enables
the characterization of uncertainty in distribution parameters. It can be directly used within a second order Monte Carlo
simulation framework, especially within the package \pkg{mc2d} (\cite{mc2d}). One could refer to Pouillot \emph{et al.}
(\cite{Pouillot10}) for an introduction to the use of \pkg{mc2d} 
and \pkg{fitdistrplus} packages in the context of quantitative 
risk assessment.

Bootstrap can also be used to calculate confidence intervals on quantiles of the fitted distribution.
For this purpose, a generic \code{quantile} function is provided for class \code{fitdist} for non censored data and \code{fitdistcens} for censored data. 
They must be called with a first argument corresponding
to an object of class \code{fitdist} or \code{fitdistcens}, and as a second argument the vector of probabilities
at which the quantiles of the fitted distribution must be estimated. By default quantiles calculated
at the estimated parameters are provided, followed by $95\%$ bootstrap confidence intervals for each quantile.
These two functions are internally calling to \code{bootdist} or \code{bootdistcens} and give
the complete results of these calls as a part of their output, in \code{resbootdist} and \code{resbootdistcens}.
The \code{quantile} function is of great interest in the ecotoxicology
field, while a hazardous concentration at $x\%$ (HCx) is computed from species sensitivity distributions, 
that is interpreted as the contaminant concentration protecting $(100-x)\%$ of the species.
% POUR JSS AJOUTER REF EN ECOTOX
Below is an example of use of \code{quantile} to estimate HCx values for different x-values, with
$95\%$ bootstrap confidence intervals, using the maximum likelihood
 fit of a lognormal distribution on the \code{endosulfan} data set.
 %%% R code
<<fitATV.lnorm.quantile, echo=TRUE>>=
flnMLE <- fitdist(ATV,"lnorm")
quantile(flnMLE, probs = c(0.05, 0.10, 0.20, 0.50))
@





\section{Conclusion}
\label{ccl}
%%%%%%%%%%
% POUR JSS AJOUTER quelques lignes sur les travaux publies utilisant le package !!!!!!!!!!!!!!! 

Papers citing \pkg{fitdistrplus} are \cite{kohlruckdeschel10,busschaertetal10,saketal11,lehaetal11,jaloustreetal11,wilson12,brooksetal11,aktassjostrand11,suuronenetal12,scholletal12,poulliotetal12,marquetouxetal12,kochetal12,hoelzeretal12,jongenburgeretal12,fusteinercostafreda12,eling12,croucheretal12,commeauetal12,bagariaetal12,anandetal12,eikhermann12,rosa12}



\bibliographystyle{plain}
\bibliography{fitdistrplus,paperscitingfitdistrplus}


 
\end{document}
