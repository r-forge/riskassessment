%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Copyright (c) 2009 Marie Laure Delignette-Muller, Regis Pouillot, Jean-Baptiste Denis,
%   Christophe Dutang                        
%                                                                                                                                                       
%    This program is free software; you can redistribute it and/or modify                               
%    it under the terms of the GNU General Public License as published by                        
%    the Free Software Foundation; either version 2 of the License, or                                 
%    (at your option) any later version.                                                                                        
%                                                                                                                                                      
%    This program is distributed in the hope that it will be useful,                                          
%    but WITHOUT ANY WARRANTY; without even the implied warranty of                        
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   
%    GNU General Public License for more details.                                                                    
%                                                                                                                                                         
%    You should have received a copy of the GNU General Public License                           
%    along with this program; if not, write to the                                                                            
%    Free Software Foundation, Inc.,                                                                                             
%    59 Temple Place, Suite 330, Boston, MA 02111-1307, USA                                            
%                                                                                                                                                         
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Fit parametric distributions on non-censored or censored data with fitdistrplus
%%%
%%%         Sweave vignette file
%%%

\documentclass[a4paper]{article}
% sweave commands for vignette
%\VignetteIndexEntry{Fit parametric distributions on non-censored or censored data}
%\VignettePackage{fitdistrplus}
%\VignetteKeyword{distribution}


\usepackage[a4paper,textwidth=18cm,textheight=27cm]{geometry}

\title{Use of the package \texttt{fitdistrplus} to specify a distribution from 
non-censored or censored data}
\author{Marie Laure Delignette-Muller, R\'egis Pouillot , Jean-Baptiste Denis and Christophe Dutang}

\begin{document}
\setkeys{Gin}{width=0.6\textwidth} 

\maketitle

<<echo=FALSE,results=hide>>=
options(digits=3)
@

Here you will find some easy examples of use of the functions of the package \texttt{fitdistrplus}. 
The aim is to show you by examples how to use these functions to help you to specify a parametric distribution 
from data corresponding to a random sample drawn from a theoretical distribution that you want to describe. 
For details, see the documentation of each function, using the R help command (ex.: \texttt{?fitdist}). 
Do not forget to load the package using the function \texttt{library} or \texttt{require}
before testing following examples.
<<>>=
library(fitdistrplus)
@

\tableofcontents

\pagebreak

\section{Specification of a distribution from non-censored continuous data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Graphical display of the observed distribution}
%%%%%%%%%%

 First of all, the observed distribution may be plotted using the function \texttt{plotdist}.

<<plotdistx1,fig=TRUE>>=
x1<-c(6.4,13.3,4.1,1.3,14.1,10.6,
9.9,9.6,15.3,22.1,13.4,13.2,
8.4,6.3,8.9,5.2,10.9,14.4)
plotdist(x1)
@

\subsection{Characterization of the observed distribution}
%%%%%%%%%%

Descriptive parameters of the empirical distribution may be computed using the function \texttt{descdist}.
This function will also provide by default a skewness-kurtosis plot which may help you to select 
which distribution(s) to fit among the potential candidates. 

<<descdistx1,fig=TRUE>>=
descdist(x1)
@

Skewness and kurtosis are known not to be robust. In order to try to
take into account the uncertainty on the estimated values of kurtosis and skewness, 
the data set may be boostrapped by fixing the argument \texttt{boot} to an integer above 10 in \texttt{descdist}. 
\texttt{boot} values of 
skewness and kurtosis corresponding to the boot nonparametric bootstrap samples are then computed and reported
on the skewness-kurtosis plot.

<<descdistx1boot,fig=TRUE>>=
descdist(x1,boot=1000)
@

\subsection{Fitting of a distribution}
%%%%%%%%%%

One or more parametric distributions may then be fitted to the data set, one at a time, using the
fonction \texttt{fitdist}. This function uses the maximum likelihood
method by default or other estimation methods described in part 5 if specified in the argument \texttt{method}.
When fitting continuous distributions, 
Cramer-von Mises, Kolmogorov-Smirnov and Anderson-Darling statistics may be computed using the function \texttt{gofstat}. 
Four goodness of fit plots are also provided.
 

Below is the result of the fit of a logistic distribution by maximum likelihood to the previous dataset.
<<fitdistx1l,fig=TRUE>>=
f1l<-fitdist(x1,"logis")
summary(f1l)
gofstat(f1l)
plot(f1l)
@

In that case Cramer-von Mises and Anderson-Darling tests may be used to test the adequation of the distribution to data. 
<<>>=
gofstat(f1l,print.test=TRUE)
@

Generally goodness-of-fit tests may be used carefully.
In some cases, especially on very big datasets, even if the null hypothesis is rejected a fitted distribution may be 
chosen as the best one among simple distributions to describe an empirical distribution, if the goodness-of-fit
plots do not show strong differences between empirical and theoretical distributions.

In that case, the fit seems correct, but it is easy to compare goodness-of-fit statistics
for other distributions fitted on the same dataset in order to check that other distributions could not give
a better fit. Below are computed the goodness-of-fit
statistics for logistic, lognormal, gamma, normal and weibull distributions. 
<<>>=
gofstat(fitdist(x1,"logis"))
gofstat(fitdist(x1,"lnorm"))
gofstat(fitdist(x1,"gamma"))
gofstat(fitdist(x1,"norm"))
gofstat(fitdist(x1,"weibull"))
@

Regarding the Cramer-von Mises and Kolmogorov-Smirnov statistics, 
the fit of a normal distribution seems better while regarding the 
Anderson-Darling statistic the fit of a logistic distribution seems better.
It is recommended to base the comparison of fits on the Anderson-Darling statistic when the modelling of the tails of 
a distribution is important, as it is often the case in risk assessment.

In order to choose between both distributions, the goodness-of-fit plot and the summary
of the fit of a normal chould be compared to the 
ones already obtained for the logistic distribution, but in that case the differences seem very small.
<<fitdistx1n,fig=TRUE>>=
f1n <- fitdist(x1,"norm")
plot(f1n)
summary(f1n)
plot(f1n)
@

For some distributions (see the help of \texttt{fitdist} for details), it is necessary to specify initial 
values for the distribution parameters in the argument \texttt{start} when using the maximum likelihood method.
\texttt{start} must be a named list
of parameters initial values. The names of
the parameters in \texttt{start} must correspond exactly to their definition in R or to their 
definition in a previous R code.
 The function \texttt{plotdist} may help to find correct initial values for 
the distribution parameters in non trivial cases, by an manual iterative use if necessary.

For example, below is the definition of the Gumbel distribution (also named extreme value distribution) and 
a first plot of the data set with the Gumbel distribution with arbitrary values for parameters.
<<plotdistx1gu1,fig=TRUE>>=
dgumbel<-function(x,a,b) 1/b*exp((a-x)/b)*exp(-exp((a-x)/b))
pgumbel<-function(q,a,b) exp(-exp((a-q)/b))
qgumbel<-function(p,a,b) a-b*log(-log(p))
plotdist(x1,"gumbel",para=list(a=3,b=2))
@

The same data set may be plotted with a Gumbel distribution with modified values for parameters.
<<plotdistx1gu2,fig=TRUE>>=
plotdist(x1,"gumbel",para=list(a=10,b=5))
@

And a Gumbel distribution may be fitted to data with these values for initial parameter values.
<<fitdistx1gu,fig=TRUE>>=
fgu<-fitdist(x1,"gumbel",start=list(a=10,b=5))
plot(fgu)
summary(fgu)
gofstat(fgu)
@

\subsection{Simulation of the uncertainty by boostrap}
%%%%%%%%%%

The uncertainty in the parameters of the fitted distribution may be simulated by parametric or nonparametric
boostrap using the function \texttt{boodist}. This function returns the boostrapped values of parameters which
may be plotted to visualize the bootstrap region. It also calculates the 95 percent confidence intervals for each 
parameter from the 2.5 and 97.5 percentiles
of the boostrap values of each parameter (see the help of the function \texttt{bootdist} for details).

Below is an example of the use of this function with the previous fit of the logistic distribution. 
<<bootdistf1l,fig=TRUE>>=
b1l<-bootdist(f1l)
plot(b1l)
summary(b1l)
@

\section{Specification of a distribution from non-censored discrete data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
 A discrete data set may be considered as a continuous one for example for a large data set
 from a binomial distribution converging to a normal one. A discrete plot of the distribution 
 may also be provided, fixing the argument discrete of the function \texttt{plotdist} to \texttt{TRUE}.
 
<<plotdistx2,fig=TRUE>>=
x2<-rnbinom(n=100,size=2,prob=0.3)
plotdist(x2,discrete=TRUE)
@

As for continuous distributions, descriptive parameters of the empirical distribution 
may be computed using the function \texttt{descdist} which also provides a skewness-kurtosis plot 
which may help you to choose which distribution(s) to fit.

<<descdistx2,fig=TRUE>>=
descdist(x2,discrete=T,boot=1000)
@

As for continuous distributions, one or more parametric distributions may then be fitted 
to the data set by maximum likelihood or alternative methods described in part 5. 

Below is the result of the fit of a Poisson distribution with the bootstrap simulations.
<<fitdistx2p,fig=TRUE>>=
f2p<-fitdist(x2,"pois")
plot(f2p)
summary(f2p)
gofstat(f2p,print.test=TRUE)
b2p<-bootdist(f2p)
summary(b2p)
@

Below is the result of the fit of a negative binomial distribution with the boostrap simulations.
<<fitdistx2nb,fig=TRUE>>=
f2n<-fitdist(x2,"nbinom")
plot(f2n)
summary(f2n)
gofstat(f2n,print.test=TRUE)
b2n<-bootdist(f2n)
summary(b2n)
@

From goodness-of-fit graphs, Chi-squared statistics, AIC and BIC values,
it seems better to choose the fit of a negative binomial distribution
for this dataset even it has one more parameter than the Poisson one. This was not obvious while
looking at the skewness-kurtosis graph. This graph must be used cautiously especially for continuous 
distributions far from the normal distribution or for discrete distributions. It is only indicative.

\section{Specification of a distribution from censored data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Censored data may contain left censored, right censored and interval censored values, 
with several lower and upper bounds. Data must be coded into a dataframe with two columns,
 respectively named \texttt{left} 
 and \texttt{right}, describing each observed value as an interval.
 The \texttt{left} column contains either \texttt{NA} for left censored observations,
 the left bound of the interval for interval censored observations,
 or the observed value for non-censored observations.
 The \texttt{right} column contains either \texttt{NA} for right censored observations,
 the right bound of the interval for interval censored observations,
 or the observed value for non-censored observations.
     
\subsection{Graphical display of the observed distribution}
%%%%%%%%%%

First of all, the observed distribution may be plotted using the function \texttt{plotdistcens}.
Data are reported directly as segments for interval, left and right censored data, 
and as points for non-censored data. For more details, see the help of the function \texttt{plotdistcens}.

<<plotdistcensd1,fig=TRUE>>=
d1<-data.frame(
left=c(1.73,1.51,0.77,1.96,1.96,-1.4,-1.4,NA,-0.11,0.55,0.41,
    2.56,NA,-0.53,0.63,-1.4,-1.4,-1.4,NA,0.13),
right=c(1.73,1.51,0.77,1.96,1.96,0,-0.7,-1.4,-0.11,0.55,0.41,
    2.56,-1.4,-0.53,0.63,0,-0.7,NA,-1.4,0.13))
plotdistcens(d1)
@

When left or right NA-values correspond to finite value (for example 0 for
left NA-values of positive data), the arguments \texttt{leftNA} (or \texttt{rightNA})
must be affected to this finite value to ensure a correct plot of left (or right) censored
observations, as in the example below.

<<plotdistcensd2,fig=TRUE>>=
d2<-data.frame(left=10^(d1$left),right=10^(d1$right))
plotdistcens(d2,leftNA=0)
@

It is also possible to fix \texttt{rightNA} or \texttt{leftNA} to a realistic 
extreme value, even if not exactly known, to obtain a reasonable global ranking of 
observations, as in the example below for the first dataset.
<<plotdistcensd1bis,fig=TRUE>>=
plotdistcens(d1,rightNA=3)
@

\subsection{Fitting of a distribution}
%%%%%%%%%%

One or more parametric distributions may then be fitted to the censored data set, one at a time, using the
fonction \texttt{fitdistcens}. This function always uses the maximum likelihood
method.  For more details, see the help of the function \texttt{fitdistcens}.
Only one goodness of fit plot is provided for censored data, in cumulative frequencies.
The uncertainty in the parameters of the fitted distribution may be simulated by nonparametric
boostrap only, using the function \texttt{boodistcens}.

Below is the result of a fit of a Weibull distribution by maximum likelihood and the results of the 
corresponding boostrap simulations.
<<fitdistcensd2w,fig=TRUE>>=
f2w<-fitdistcens(d2,"weibull")
summary(f2w)
plot(f2w,leftNA=0)
@

<<bootdistcensf2w,fig=TRUE>>=
b2w<-bootdistcens(f2w)
summary(b2w)
plot(b2w)
@

Goodness of fit statistics are not computed for fit on censored data, so the quality of fit 
may only be estimated from the loglikelihood and the goodness of fit plot.

Below is the fit of a lognormal distribution to the same censored data set.
<<fitdistcensd2ln,fig=TRUE>>=
f2l<-fitdistcens(d2,"lnorm")
summary(f2l)
plot(f2l,leftNA=0)
@

Below is the fit of an exponential distribution.
<<fitdistcensd2e,fig=TRUE>>=
f2e<-fitdistcens(d2,"exp")
summary(f2e)
plot(f2e,leftNA=0)
@

As with \texttt{fitdist}, for some distributions (see the help of \texttt{fitdistcens} for details), 
it is necessary to specify initial 
values for the distribution parameters in the argument \texttt{start}.
\texttt{start} must be a named list
of parameters initial values. The names of
the parameters in \texttt{start} must correspond exactly to their definition in R or to their 
definition in a previous R code.
The function \texttt{plotdistcens} may help to find correct initial values for 
the distribution parameters in non trivial cases, by an manual iterative use if necessary, as explained 
previously for non-censored continuous data.

\section{Changing the optimization algorithm used to maximize the likelihood}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sometimes the default algorithm used to maximize the likelihood fails to converge. It may then
be interesting to change some options of the function \texttt{optim} or to use another optimization
function than \texttt{optim} to maximize the likelihood.

\subsection{Changing the arguments passed to \texttt{optim}}
%%%%%%%%%%

The argument optim.method may be used in the call to \texttt{fitdist} or
\texttt{fitdistcens}. It will internally be passed to \texttt{mledist} and to \texttt{optim}.
This argument may be fixed to ``Nelder-Mead'' (the robust Nelder and Mead method), 
``BFGS'' (the BFGS quasi-Newton method), ``CG'' (a conjugate gradients method), 
``SANN'' (a variant of simulated annealing) or ``L-BFGS-B'' (a modification of the BFGS 
quasi-Newton method which enables box constraints optimization). For the use of the last method the 
arguments \texttt{lower} and/or \texttt{upper} also have to be passed. More details on these optimization
functions may be found in the help page of \texttt{optim} from the package \texttt{stats}.

Below are examples of fits of a gamma distribution to non censored data with various options
of \texttt{optim}.

<<>>=
fitdist(x1,"gamma",optim.method="Nelder-Mead")
fitdist(x1,"gamma",optim.method="BFGS") 
fitdist(x1,"gamma",optim.method="L-BFGS-B",lower=c(0,0))
fitdist(x1,"gamma",optim.method="SANN")
@

\subsection{Supplying another optimization function}
%%%%%%%%%%

You may also want to use another function than \texttt{optim} to maximize the likelihood.
This optimization function has to be specified by the argument \texttt{custom.optim} 
in the call to \texttt{fitdist} or
\texttt{fitdistcens}. But before that, it is necessary to customize this optimization function :
\texttt{custom.optim} function must have (at least) the following arguments,
\texttt{fn} for the function to be optimized, \texttt{par} for the initialized parameters. 
It is assumed that \texttt{custom.optim} should carry out a MINIMIZATION. Finally, it should return
at least the following components: \texttt{par} for the estimate, \texttt{convergence} for the convergence
code, \texttt{value} for \texttt{fn(par)} and \texttt{hessian}.

Below is an example of code written to customize \texttt{genoud} function from \texttt{rgenoud} package.
\begin{verbatim}
mygenoud <- function(fn, par, ...) 
{
   require(rgenoud)
   res <- genoud(fn, starting.values=par, ...)        
   standardres <- c(res, convergence=0)
   return(standardres)
}
\end{verbatim}

The customized optimization function may then be passed as the argument \texttt{custom.optim} 
in the call to \texttt{fitdist}
or \texttt{fitdistcens}. The following code may for example be used to fit a gamma distribution to the
non censored data \texttt{x1}. Note that in this example various arguments are also passed from \texttt{fitdist} 
to \texttt{genoud} :
\texttt{nvars}, \texttt{Domains}, \texttt{boundary.enforcement}, 
\texttt{print.level} and \texttt{hessian}.

\begin{verbatim}
fitdist(x1, "gamma", custom.optim=mygenoud, nvars=2,    
   Domains=cbind(c(0,0), c(10, 10)), boundary.enforcement=1, 
   print.level=1, hessian=TRUE)
\end{verbatim}

\section{Alternative methods to maximum likelihood for non censored data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
For non censored data, alternative methods to maximum likelihood are available.

\subsection{Moment matching estimation}
%%%%%%%%%%
Moment matching may be performed fixing the argument \texttt{method}
to ``mme'' in the call to fitdist (see the help file page of the function
\texttt{mmedist} in \texttt{fitdistrplus} reference manual for details).
Below is an example of fit of a uniform distribution to data randomly
generated in a uniform distribution.
<<>>=
u <- runif(50,min=5,max=10)
fitdist(u,"unif",method="mme")
@

\subsection{Quantile matching estimation}
%%%%%%%%%%
Quantile matching may also be performed fixing the argument \texttt{method}
to ``qme'' in the call to fitdist and adding an argument \texttt{probs}
defining the probabilities for which the quantile matching is done.
The length of this vector must be equal
to the number of parameters to estimate.(see the help file page of the function
\texttt{qmedist} in \texttt{fitdistrplus} reference manual for details).
Below is an example of fit of a uniform distribution to the same dataset by matching first
and third quartiles.
<<>>=
fitdist(u,"unif",method="qme",probs=c(0.25,0.75))
@

\subsection{Maximum goodness-of-fit estimation}
%%%%%%%%%%
Parameters may also be estimated by maximizing a goodness-of-fit distance
by fixing the argument \texttt{method}
to ``mge'' in the call to fitdist and adding an argument \texttt{gof}
coding for the goodness-of-fit distance chosen. One may use the classical 
Cramer-von Mises distance (``CvM''), the classical
Kolmogorov-Smirnov distance (``KS''), the classical Anderson-Darling distance (``AD'')
which gives more weight to the tails of the distribution,
or one of the variants of this last distance (see the help file page of the function
\texttt{mgedist} in \texttt{fitdistrplus} reference manual for details).
Below is an example of fit of a uniform distribution to the same dataset by maximizing the 
Kolmogorov-Smirnov distance.
<<>>=
fitdist(u,"unif",method="mge",gof="KS")
@

 
\end{document}
