#
# created       on 14_01_28
# last modified on 14_09_07
#
# + the order of the item is irrelevant
#   but they are exploited in that orden
# + according to an option, the existence
#   of the specified file, objects is
#   checked or not.
# + '_ALL_' means all occurences
#
# indicating the description file
<<DESCRIPTION>> documair.DESCRIPTION
#
# the Rd file to describe the package
<<PRESENTATION>> documair.package.Rd
#
# extension(s) for the code files
# {(i) more than one extension can be given,
# (ii) it is a way to produce packages with
#      different object sets from the same
#      personal directory.}
<<C.EXTE>> code.r alias.r
# coding.r
# the same for the test files
<<T.EXTE>> test.r
#
# specifying hidden code files
# (from now every object in every file is hidden)
<<HIDDEN.F>> _ALL_
#
# specifying exported code files
# (except those belonging to the following file)
<<EXPORTED.F>> objects.code.r user.code.r
#  exterieur.coding.r
#
# specifying exported code files
# (comprising each a series of aliased objects)
<<ALIASED.F>> pert.alias.r
#
# specifying hidden objects
# (here no specific object will be hidden,
#  so the item is commented)
#<<HIDDEN.O>>
#
# specifying exported objects
# (here this object belonging to a hidden file
#  is asked to be exported)
<<EXPORTED.O>> documair0tags
#
# specifying the display
<<DISPLAY.F>> _ALL_
<<DISPLAY.O>> documair0 display8tags
#
# specifying keywords from the components
# (here 'compile' must be interpreted as
#  'compilation', 'pkg' as 'package',...
#  be aware that the two word must be stuck
#  with '=' and that a word must not comprise
#  blank.)
# (also '_NO_' means suppress the keyword)
<<KEYWORDS>>/=/U
compile=compilation
pkg=package
prepare=preparation
make=preparation
parse=compilation
objects=object
sum=_NO_
c=C
f=Fortran
#
# end of 'documair.which.txt' file
